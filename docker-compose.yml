

version: "3.9"

services:
  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "5000:5000"
    environment:
      - API_GATEWAY_URL=http://api-gateway:8000
    depends_on:
      - api-gateway
    networks:
      - app-network

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8000:8000"
    environment:
      - USERS_SVC=http://authentication:8001
      - POSTS_SVC=http://social:8006
      - ACTIVITIES_SVC=http://actividades:8003
      - MESSAGES_SVC=http://social:8006
      - EVENTS_SVC=http://eventos:8005
      - SOCIAL_SVC=http://social:8006
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret}
    depends_on:
      - authentication
      - actividades
      - eventos
      - social
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  authentication:
    build: ./services/authentication
    container_name: authentication
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-postgres}@db:5432/auth_db
    depends_on:
      - db
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  actividades:
    build: ./services/actividades
    container_name: actividades
    ports:
      - "8003:8000"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  eventos:
    build: ./services/eventos
    container_name: eventos
    ports:
      - "8005:8000"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  social:
    build: ./services/social
    container_name: social
    ports:
      - "8006:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-postgres}@db:5432/social_db
    depends_on:
      - db
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üêò Servicio de base de datos PostgreSQL
  db:
    image: postgres:16
    container_name: postgres-db
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:3212902000S}
      - POSTGRES_DB=auth_db
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # üß≠ pgAdmin 4: interfaz web para PostgreSQL
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@local.com
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin}
    depends_on:
      - db
    networks:
      - app-network
    volumes:
      - pgadmin-data:/var/lib/pgadmin

# üåê Red compartida
networks:
  app-network:
    driver: bridge

# üíæ Vol√∫menes persistentes
volumes:
  db-data:
  pgadmin-data:
